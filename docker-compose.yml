services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: experimento
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  orders-svc:
    build: ./orders-svc
    container_name: orders-svc
    ports:
      - "5006:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=orders-svc
    depends_on:
      - kafka
      - postgres

  inventory-svc-1:
    build: ./inventory-svc
    container_name: inventory-svc-1
    ports:
      - "5001:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=inventory-svc-1
      - INSTANCE_ID=1
    depends_on:
      - kafka
      - postgres

  inventory-svc-2:
    build: ./inventory-svc
    container_name: inventory-svc-2
    ports:
      - "5002:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=inventory-svc-2
      - INSTANCE_ID=2
    depends_on:
      - kafka
      - postgres

  inventory-svc-3:
    build: ./inventory-svc
    container_name: inventory-svc-3
    ports:
      - "5003:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=inventory-svc-3
      - INSTANCE_ID=3
    depends_on:
      - kafka
      - postgres

  monitor-svc:
    build: ./monitor-svc
    container_name: monitor-svc
    ports:
      - "5004:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=monitor-svc
    depends_on:
      - kafka
      - postgres

  voter-svc:
    build: ./voter-svc
    container_name: voter-svc
    ports:
      - "5005:5000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=voter-svc
    depends_on:
      - kafka
      - postgres

  dashboard:
    build: ./dashboard
    container_name: dashboard
    ports:
      - "5007:5007"
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/experimento
      - SERVICE_NAME=dashboard
    volumes:
      - .:/app/host:ro
    depends_on:
      - postgres

volumes:
  postgres_data: